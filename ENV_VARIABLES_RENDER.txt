╔════════════════════════════════════════════════════════════════════════════╗
║                  RENDER ENVIRONMENT VARIABLES QUICK REFERENCE              ║
║                     Payroll Management System - MERN Stack                 ║
╚════════════════════════════════════════════════════════════════════════════╝

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
📋 BACKEND SERVICE ENVIRONMENT VARIABLES
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Copy and paste these into Render Dashboard → Backend Service → Environment

┌─ DATABASE CONFIGURATION ─────────────────────────────────────────────────┐
│                                                                            │
│  Variable: MONGODB_URI                                                    │
│  Value: mongodb+srv://payroll-admin:tjQR02Mq6Lpdi8O3@cluster0.gpmyoiu.mongodb.net/payroll?retryWrites=true&w=majority │
│                                                                            │
│  📝 This is your actual MongoDB Atlas connection string                   │
│  ✅ Already configured and tested successfully                            │
│                                                                            │
└───────────────────────────────────────────────────────────────────────────┘

┌─ SERVER CONFIGURATION ────────────────────────────────────────────────────┐
│                                                                            │
│  Variable: PORT                                                           │
│  Value: 5001                                                              │
│                                                                            │
│  Variable: NODE_ENV                                                       │
│  Value: production                                                        │
│                                                                            │
└───────────────────────────────────────────────────────────────────────────┘

┌─ JWT CONFIGURATION ───────────────────────────────────────────────────────┐
│                                                                            │
│  Variable: JWT_SECRET                                                     │
│  Value: [Generate using: openssl rand -base64 32]                        │
│  Example: Xy9ZpQm4K8vN2wR7tH3jL6sF1dG5bC9aE8xW0uY4iO=                    │
│                                                                            │
│  🔐 Generate your own secure secret:                                      │
│     macOS/Linux: openssl rand -base64 32                                 │
│     Windows: [Convert]::ToBase64String((1..32|%{Get-Random -Max 256}))  │
│                                                                            │
│  Variable: JWT_EXPIRE                                                     │
│  Value: 30d                                                               │
│                                                                            │
└───────────────────────────────────────────────────────────────────────────┘

┌─ EMAIL CONFIGURATION (GMAIL) ─────────────────────────────────────────────┐
│                                                                            │
│  Variable: GMAIL_USER                                                     │
│  Value: your-email@gmail.com                                             │
│  Example: payroll@company.com                                            │
│                                                                            │
│  Variable: GMAIL_PASS                                                     │
│  Value: [16-character Gmail App Password]                                │
│  Example: abcdefghijklmnop                                               │
│                                                                            │
│  📝 Generate Gmail App Password:                                          │
│     1. Enable 2FA: https://myaccount.google.com/security                │
│     2. Generate: https://myaccount.google.com/apppasswords              │
│     3. Select: Mail → Other (Custom name) → "Payroll System"            │
│     4. Copy the 16-character password (remove spaces)                    │
│                                                                            │
│  Variable: EMAIL_FROM_NAME                                                │
│  Value: AXESS & V-ACCEL Payroll System                                   │
│                                                                            │
└───────────────────────────────────────────────────────────────────────────┘

┌─ URL CONFIGURATION ───────────────────────────────────────────────────────┐
│                                                                            │
│  Variable: FRONTEND_URL                                                   │
│  Value: https://axess-payroll-app.netlify.app                            │
│  ⚠️  Update after deploying frontend                                      │
│                                                                            │
│  Variable: CORS_ORIGIN                                                    │
│  Value: https://axess-payroll-app.netlify.app                            │
│  ⚠️  Update after deploying frontend                                      │
│                                                                            │
└───────────────────────────────────────────────────────────────────────────┘

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
🎨 FRONTEND STATIC SITE ENVIRONMENT VARIABLES
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Copy and paste this into Render Dashboard → Frontend Static Site → Environment

┌─ API CONFIGURATION ───────────────────────────────────────────────────────┐
│                                                                            │
│  Variable: REACT_APP_API_URL                                              │
│  Value: https://payroll-backend.onrender.com                             │
│  ⚠️  Update after deploying backend                                       │
│                                                                            │
└───────────────────────────────────────────────────────────────────────────┘

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
📝 SUMMARY OF ALL VARIABLES
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

BACKEND (9 variables):
  ✓ MONGODB_URI          - MongoDB Atlas connection string
  ✓ PORT                 - Server port (5001)
  ✓ NODE_ENV             - Environment (production)
  ✓ JWT_SECRET           - JWT secret key (generate new)
  ✓ JWT_EXPIRE           - JWT expiration (30d)
  ✓ GMAIL_USER           - Gmail email address
  ✓ GMAIL_PASS           - Gmail app password (16 chars)
  ✓ EMAIL_FROM_NAME      - Email sender name
  ✓ FRONTEND_URL         - Frontend URL (after deployment)
  ✓ CORS_ORIGIN          - CORS allowed origin (after deployment)

FRONTEND (1 variable):
  ✓ REACT_APP_API_URL    - Backend API URL (after deployment)

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
⚠️  IMPORTANT NOTES
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1. Deploy Backend FIRST, then Frontend
2. Update FRONTEND_URL and CORS_ORIGIN after frontend deployment
3. Update REACT_APP_API_URL after backend deployment
4. Never share or commit these values to git
5. Generate NEW JWT_SECRET (don't use the example)
6. Use Gmail App Password, NOT your regular Gmail password
7. MongoDB Atlas IP whitelist must include 0.0.0.0/0
8. Test each service after deployment and configuration

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
✅ VERIFICATION CHECKLIST
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Backend:
  [ ] MongoDB URI is correct with /payroll-app database
  [ ] JWT_SECRET is unique and secure (32+ characters)
  [ ] Gmail credentials are valid (test locally first)
  [ ] PORT is set to 5001
  [ ] NODE_ENV is set to production

Frontend:
  [ ] REACT_APP_API_URL points to backend URL
  [ ] Backend CORS_ORIGIN matches frontend URL
  [ ] Backend FRONTEND_URL matches frontend URL

Testing:
  [ ] Backend logs show "Server running" and "MongoDB connected"
  [ ] Frontend loads without errors
  [ ] Can register/login successfully
  [ ] Admin user created in MongoDB
  [ ] Email functionality works

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
🔗 USEFUL LINKS
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Render Dashboard:     https://dashboard.render.com
MongoDB Atlas:        https://cloud.mongodb.com
Gmail App Passwords:  https://myaccount.google.com/apppasswords
JWT Secret Generator: https://www.grc.com/passwords.htm
Render Docs:          https://render.com/docs

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Last Updated: October 25, 2025
For detailed deployment steps, see: RENDER_DEPLOYMENT.md
